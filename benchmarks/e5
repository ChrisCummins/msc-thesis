#!/usr/bin/env python2.7
#
# e5
#
from __future__ import print_function
from benchlib import *
from skelcl import *

from sys import exit

def enumerate(hosts, benchmarks, knobs):
    harnesses = []
    perms = permutations(*[variablerange(x[0], x[1]) for x in knobs])

    # Enumerate test harnesses.
    for host in hosts:
        for benchmark in benchmarks:
            for devargs in host.devargs():
                for p in perms:
                    invars = list(p) + list(devargs)
                    sampler = FixedSizeSampler(10)
                    testcase = SkelCLTestCase(benchmark,
                                              host=host,
                                              invars=invars)
                    harnesses.append(TestHarness(testcase, sampler))

    print("Enumerated", len(harnesses), "test harnesses.")
    return harnesses

def testStencilLocalSize():
    knobs = [
        (StencilLocalSizeR, [32, 64, 128, 256]),
        (StencilLocalSizeC, [8, 16, 32, 64, 128, 256])
       ]

    benchmarks = [
        SkelCLBenchmark("CannyEdgeDetection"),
        SkelCLBenchmark("GameOfLife"),
        SkelCLBenchmark("GaussianBlur"),
        SkelCLBenchmark("HeatSimulation"),
        SkelCLBenchmark("FDTD")
       ]

    return enumerate(hosts, benchmarks, knobs)

q = jobqueue(testStencilLocalSize())
runJobQueue(q)
