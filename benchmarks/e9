#!/usr/bin/env python2.7
#
# e6
#
from __future__ import print_function
from itertools import product

from benchlib import *
from skelcl import *
from util import *

jobdesc =  {
    "hosts": [ "florence", "cec", "dhcp-90-060", "whz5", "tim", "monza" ],
    "benchmarks": {
        "GameOfLife": {
            "args": {
                "Size": ["--size 4096"],
                "Iterations": ["-i 20"]
            }
        }
    },
    "args": {},
    "knobs": {}
}

def instantiate(host, benchmark, args, knobs):
    sampler = FixedSizeSampler(10)
    harnesses = []

    for devargs in host.devargs():
        c = SkelCLTestCase(benchmark, host=host,
                           invars=knobs + args + devargs)

        harnesses += [TestHarness(c, sampler)]

    return harnesses

def mapOverlapVsStencil():
    return enumerateHarnesses(jobdesc, instantiate)

HARNESSES = mapOverlapVsStencil()

q = jobqueue(HARNESSES)

runJobQueue(q)

# Headless servers stop here.
if not masterhost(): exit(0)

####### DATA PROCESSING

from re import sub

from stats import *

import plot as plt

# Graph event times.
[plt.openCLEventTimes(x.testcase.invars) for x in HARNESSES]

exit(0)
