#!/usr/bin/env python2.7

from __future__ import print_function
from operator import itemgetter
from re import sub
from sys import exit
import os

from benchlib import *

pow2range = [2 ** x for x in range(10, 14)]
knobrange = [2 ** x for x in range(3, 7)]

def pre_exec_hook(settings):
    cd(CWD)
    os.system("sed -r -i 's/(define KNOB_C) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['c']))
    os.system("sed -r -i 's/(define KNOB_R) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['r']))
    os.system("sed -r -i 's/(define KNOB_S) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['s']))

    os.system("sed -r -i 's/(define GENERIC_KNOB_C) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['c']))
    os.system("sed -r -i 's/(define GENERIC_KNOB_R) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['r']))
    os.system("sed -r -i 's/(define GENERIC_KNOB_S) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
              .format(settings['s']))

    os.system('make -C ../skelcl/build/examples/MatrixMultiply &>/dev/null')

experiment = {
    'have_data': False,
    'name': 'e2',
    'iterations': 10 - 1,
    'settings': {
        'c': knobrange,
        'r': knobrange,
        's': knobrange
    },
    'pre-exec-hook': pre_exec_hook,
    'progs': {
        'MatrixMultiply': [
            ['-i 10'],
            #['', '--generic-kernel'],
            ['--row_count_A {0}'.format(x) for x in pow2range],
            ['--col_count_A {0}'.format(x) for x in pow2range],
            ['--col_count_B {0}'.format(x) for x in pow2range]
        ]
    }
}

if ID() != "cec":
    for prog in experiment['progs']:
        experiment['progs'][prog].append(['--device-type GPU'])

runexperiment(experiment)
exit(0)

# GATHER DATA
if not experiment['have_data']:
    iterate(experiment)

name = experiment['name']
R = load(name)
