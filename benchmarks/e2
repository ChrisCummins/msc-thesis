#!/usr/bin/env python2.7

from __future__ import print_function
from operator import itemgetter
from re import sub
from sys import exit
import os

from benchlib import *

pow2range = [2 ** x for x in range(10, 14)]
knobrange = [2 ** x for x in range(3, 7)]

for c in knobrange:
    for r in knobrange:
        for s in knobrange:

            cd(CWD)
            os.system("sed -r -i 's/(define KNOB_C) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
                      .format(c))
            os.system("sed -r -i 's/(define KNOB_R) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
                      .format(r))
            os.system("sed -r -i 's/(define KNOB_S) [0-9]+/\\1 {0}/' ../skelcl/include/SkelCL/detail/AllPairsDef.h"
                      .format(s))

            os.system('make -C ../skelcl/build/examples/MatrixMultiply &>/dev/null')

            experiment = {
                'have_data': False,
                'name': 'e2-{0}-{1}-{2}'.format(c, r, s),
                'iterations': 30 - 1,
                'progs': {
                    'MatrixMultiply': [
                        ['-i 10'],
                        ['', '--generic-kernel'],
                        ['--row_count_A {0}'.format(x) for x in pow2range],
                        ['--col_count_A {0}'.format(x) for x in pow2range],
                        ['--col_count_B {0}'.format(x) for x in pow2range]
                    ]
                }
            }

            if ID() != "cec":
                for prog in experiment['progs']:
                    experiment['progs'][prog].append(['--device_type GPU'])

            # GATHER DATA
            if not experiment['have_data']:
                iterate(experiment)

name = experiment['name']
R = load(name)
