#!/usr/bin/env python2

import random
import sys
import os

import labm8
from labm8 import io
from labm8 import fs
from labm8 import make
from labm8 import system

import experiment

def set_border(north=1, south=1, east=1, west=1):
    io.debug(("Set border [north: {n}, south: {s}, east: {e}, west: {w}]"
              .format(n=north, s=south, e=east, w=west)))
    system.sed("(#define NORTH).+", "\\1 " + str(north),
               experiment.SIMPLEBIG_SRC_HOST)
    system.sed("(#define SOUTH).+", "\\1 " + str(south),
               experiment.SIMPLEBIG_SRC_HOST)
    system.sed("(#define EAST).+", "\\1 " + str(east),
               experiment.SIMPLEBIG_SRC_HOST)
    system.sed("(#define WEST).+", "\\1 " + str(west),
               experiment.SIMPLEBIG_SRC_HOST)
    make.make(dir=experiment.SIMPLEBIG_BUILD)

def sample_space():
    """
    Sample the space in a random order.
    """
    fs.cd(experiment.SIMPLEBIG_BUILD)

    borders = list(experiment.BORDERS)
    args = list(experiment.ARGS)

    random.shuffle(borders)
    random.shuffle(args)

    for border in borders:
        set_border(*border)

        for args in args:
            args = labm8.flatten(args) + ["-i", "500"]
            io.debug(args)
            ret, out, err = system.run([experiment.SIMPLEBIG_BUILD_BIN] + args,
                                       stdout=system.STDOUT, stderr=system.STDERR)
            if ret:
                system.echo(border, args, "naughty.txt", append=True)

def main():
    os.environ["OMNITUNE_OFFLINE_TRAINING"] = "1"
    while True:
        sample_space()



if __name__ == "__main__":
    main()
